apiVersion: v1
kind: ServiceAccount
metadata:
  name: $(namespace)-apisix-data-plane
automountServiceAccountToken: true
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: $(namespace)-apisix-data-plane-endpoints
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: $(namespace)-apisix-data-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: $(namespace)-apisix-data-plane-endpoints
subjects:
  - kind: ServiceAccount
    name: $(namespace)-apisix-data-plane
    namespace: "apisix"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apisix-deployment
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apisix-deployment
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: apisix-deployment
    spec:
      serviceAccountName: $(namespace)-apisix-data-plane
      terminationGracePeriodSeconds: 0
      containers: 
        - livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: 9080
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: 9080
            timeoutSeconds: 2
          image: "apache/apisix:3.2.1-debian"
          imagePullPolicy: IfNotPresent
          name: apisix-deployment
          command: ["sh", "-c","ln -s /apisix-config/apisix.yaml /usr/local/apisix/conf/apisix.yaml && /docker-entrypoint.sh docker-start"]
          ports:
            - containerPort: 9080
              name: "http"
              protocol: "TCP"
            - containerPort: 9443
              name: "https"
              protocol: "TCP"
          volumeMounts:
            - mountPath: /usr/local/apisix/conf/config.yaml
              name: apisix-config-yaml
              subPath: config.yaml
            - mountPath: /apisix-config/apisix.yaml
              name: apisix-apisix-yaml
              subPath: apisix.yaml
      volumes:
        - configMap:
            name: apisix-config-yaml
          name: apisix-config-yaml
        - configMap:
            name: apisix-apisix-yaml
          name: apisix-apisix-yaml
---
apiVersion: v1
kind: Service
metadata:
  name: apisix-service
spec:
  selector:
    app: apisix-deployment
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9080
    - name: https
      port: 443
      protocol: TCP
      targetPort: 9443
  type: LoadBalancer